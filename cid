#######################################
# Complexity Invariant Distance (CID) #
#######################################
# The first function computes the complexity estimate, the input is a vector, the output is a scalar
# The second function calculates the complexity invariant distance for two vectors (they can be different lengths).

ce <- function(x) {
	ce1 <- rep(0,dim(x)[1]) # Define a vector to hold the results
	for (n in 2:dim(x)[1]-1) {ce1[n] <- (x[n,]-x[n+1,])^2} # Calculates the vector to be summed
	ce1 <- sqrt(sum(ce1)) # Sums the vector and takes the square root
	return(ce1)
	}

cid <- function(x,y) {
	cid1 <- max(ce(x), ce(y))/min(ce(x), ce(y)) 
	return(cid1)
	}
